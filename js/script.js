var map = null
var map_cells_OLD = [
[[0],[0],[0],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[0],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[ ],[0],[ ],[0],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[0],[0],[0],[0],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[0],[ ],[0],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[0],[ ],[0],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[0],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[ ],[0],[ ],[0],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]],
[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0],[0],[ ],[0],[0],[0],[0],[0]]
]

var myGamepad = null

var map_cells = [
[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[0],[0],[0]],
[[0],[ ],[ ],[0],[3],[3],[3],[3],[0],[ ],[ ],[0],[3],[3],[3],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[3],[0],[ ],[ ],[ ],[ ],[0],[3],[0]],
[[0],[ ],[ ],[0],[3],[3],[3],[3],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[3],[3],[3],[0],[ ],[ ],[0],[4],[4],[0],[2],[ ],[ ],[0],[3],[3],[3],[3],[3],[0]],
[[0],[0],[0],[2],[3],[0],[ ],[ ],[0],[ ],[ ],[0],[3],[3],[3],[0],[ ],[ ],[0],[4],[4],[0],[ ],[ ],[ ],[0],[3],[3],[3],[3],[3],[0]],
[[0],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0]],
[[0],[ ],[0],[ ],[ ],[0],[3],[3],[0],[ ],[ ],[0],[ ],[0],[3],[0],[0],[0],[0],[ ],[ ],[3],[3],[0],[0],[ ],[ ],[ ],[ ],[ ],[2],[0]],
[[0],[ ],[0],[ ],[ ],[0],[3],[3],[0],[ ],[ ],[0],[ ],[0],[0],[0],[ ],[ ],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0]],
[[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[ ],[ ],[0],[3],[0],[ ],[0],[ ],[ ],[0],[ ],[ ],[0],[3],[0],[ ],[ ],[ ],[ ],[ ],[ ],[ ],[0]],
[[0],[ ],[ ],[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[3],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[ ],[0]],
[[0],[ ],[ ],[0],[3],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[3],[3],[3],[3],[3],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[0],[0],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[3],[3],[3],[3],[3],[0],[ ],[ ],[ ],[0]],
[[0],[0],[0],[0],[3],[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[3],[3],[3],[3],[3],[0],[ ],[ ],[ ],[0]],
[[0],[4],[4],[0],[0],[0],[ ],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[3],[0]],
[[0],[4],[4],[0],[3],[0],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[3],[0],[0],[0],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[0],[0],[0],[0]],
[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[3],[3],[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[0]],
[[0],[ ],[ ],[ ],[ ],[0],[0],[0],[0],[0],[ ],[ ],[3],[3],[3],[0],[3],[3],[0],[0],[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[ ],[0],[3],[3],[3],[0],[ ],[ ],[3],[0],[0],[0],[0],[0],[0],[2],[ ],[ ],[0],[0],[0],[0],[3],[3],[0],[ ],[ ],[0]],
[[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[ ],[ ],[ ],[ ],[ ],[0],[3],[ ],[3],[0],[0],[0],[ ],[ ],[0]],
[[0],[0],[0],[0],[2],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[3],[ ],[ ],[0],[ ],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[3],[0],[0],[0],[0]],
[[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[3],[ ],[ ],[0],[ ],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[0]],
[[0],[ ],[ ],[ ],[ ],[ ],[ ],[0],[ ],[ ],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[3],[0],[ ],[ ],[0],[ ],[ ],[0],[ ],[0],[ ],[ ],[0]],
[[0],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[ ],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[0],[0],[ ],[ ],[0]],
[[3],[0],[ ],[ ],[0],[1],[1],[1],[1],[1],[1],[1],[1],[0],[ ],[ ],[0],[ ],[0],[3],[0],[ ],[ ],[0],[0],[0],[0],[ ],[ ],[0],[0],[0]],
[[0],[0],[0],[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[0],[ ],[ ],[0],[0],[0],[3],[0],[ ],[ ],[0],[4],[4],[0],[ ],[ ],[0],[3],[0]],
[[0],[3],[3],[3],[0],[1],[1],[1],[1],[1],[1],[1],[1],[0],[0],[0],[0],[3],[0],[3],[0],[ ],[ ],[0],[4],[4],[0],[ ],[ ],[0],[ ],[0]],
[[0],[3],[3],[3],[0],[1],[1],[1],[1],[1],[1],[1],[1],[0],[3],[3],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[3],[0]],
[[0],[0],[0],[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[0],[3],[3],[0],[3],[3],[3],[0],[3],[3],[0],[3],[3],[0],[ ],[ ],[0],[0],[0]],
[[0],[1],[1],[3],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[3],[3],[0],[3],[3],[3],[0],[3],[3],[0],[0],[0],[0],[0],[0],[ ],[ ],[0]],
[[0],[1],[1],[0],[0],[ ],[ ],[0],[3],[3],[3],[3],[3],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[3],[3],[3],[3],[0],[ ],[ ],[0]],
[[0],[1],[1],[0],[2],[ ],[ ],[0],[3],[3],[3],[3],[3],[0],[3],[3],[0],[ ],[ ],[ ],[0],[3],[3],[0],[3],[3],[3],[3],[0],[ ],[ ],[0]],
[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[ ],[ ],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0]]
]
mapRows = 32
mapCols = 32

var dude = null
var startRow = 0
var startCol = 0

var dummies = []
var polices = []


function require(script) {
    $.ajax({
        url: script,
        dataType: "script",
        async: false,           // <-- This is the key
        success: function () {
            // all good...
        },
        error: function () {
            throw new Error("Could not load script " + script);
        }
    });
}

require('./js/test.js')
require('./js/gamepad.js')
require('./js/map.js')
require('./js/dude.js')
require('./js/dummy.js')
require('./js/police.js')




zoomLevel = 0.5;

var updateZoom = function(zoom) {
   zoomLevel += zoom;
   
   $("html").css("fontSize", (6 * zoomLevel)+"px");
   $("#zoom-level").text(zoomLevel)
   // document.getElementById('r31c0').scrollIntoView({
		// behavior: 'instant',
		// block: 'center',
		// inline: 'center'
	// });
}

var setZoom = function(zoom) {
   zoomLevel = zoom;
   $("html").css("fontSize", (6 * zoomLevel)+"px");
   $("#zoom-level").text(zoomLevel);
}

var initialZoom = async function(max_zoom){
	let zoomInterval = await window.setInterval(function() {
		 
		updateZoom(0.025);
		if(zoomLevel > max_zoom){
			setZoom(max_zoom)
			clearInterval(zoomInterval);
		}
		 
	}, 25)
}

var setGamepad = function(){
	console.log("gamepad object creation")
	myGamepad = new Gamepad("gamepad")
}

var setPlayer = function(){
	//PLAYER
	dude = new Dude("#dude")	
	dude.setPosition(0,31)
}

var setPolice = function(max_police){
	//POLIS
	
	for(let i = 1 ; i <= max_police ; i++){	
		$("body").append("<div id='police_"+i+"'></div>")
		$("body").append("<div class='police_light_container'><div id='police_lights_"+i+"' class='police_light'></div></div>")
		console.log(i)
		let police = null
		if(i % 3 == 1 || i == 1){
			console.log("police 1")
			police = new Police(i, 20, 5)
		}
		if(i % 3 == 2 || i == 2){
			console.log("police 2")
			police = new Police(i, 2, 15)
		}
		if(i % 3 == 0){
			console.log("police 3")
			police = new Police(i, 25, 26)
		}
		
		police.live()
		polices.push(police)
	}
	
}

var setDummies = function(max_dummies){
	//DUMMIES
	for(let i = 1 ; i < max_dummies ; i++){
		let free_cell = false
		let Y, X
		while (free_cell == false) {
			Y = Math.floor(Math.random() * (mapRows-1 - 0 + 1) + 0)
			X = Math.floor(Math.random() * (mapCols-1 - 0 + 1) + 0)
			let cell = map.getCell("r"+Y+"c"+X)
			if(cell.hasClass("free")){
				free_cell = true
			}
		}
		
		let resto
		if(i > 5){
			resto = i % 5 +1; 
		} else {
			resto = i
		}
		
		
		$("body").append("<div id='dummy_"+i+"'></div>")
		let dummy = new Dummy("#dummy_"+i)
		dummy.setAsDummy(resto)
		dummy.setPosition(X,Y)
		dummies.push(dummy)
		dummy.live()
	}
}

var printGameVars = function(max_zoom){
	let printInterval = window.setInterval(function() {
		// console.log("printing")
		$("#followers_recount").html(dude.followers.length)
		$("#dude_position_y").html(dude.row)
		$("#dude_position_x").html(dude.col)
		// let cop_1 = polices[0]
		// $("#cop_position_y").html(cop_1.row)
		// $("#cop_position_x").html(cop_1.col)
		// $("#cop_velocity").html(cop_1.movementTime)
		// console.log(navigator.getGamepads())
	},50)
	
}

window.addEventListener('gamepadconnected', (event) => {
	console.log("gamepad connected event")
	myGamepad.setGamepad(event.gamepad.index)
})



$(document).ready(async function() {
	map = new Map("#map", mapRows, mapCols)
	const zoom_in = document.querySelector('#zoomin');
	const zoom_out = document.querySelector('#zoomout');
	
	console.log("zoomenado el mapa")
	await initialZoom(2.725)
	
	setGamepad()
	
	
	await setTimeout(()=>{
		setPlayer()
		// setPolice(1)
		// setDummies(6)
		let interval = window.setInterval(printGameVars(), 15000);
	},2500)
	
	setTimeout(() => {
		$("#sagrada").addClass("animate")
	}, 3000)
	
	
	zoom_in.addEventListener('click', function() {
		console.log("zoom in")
		zoomIn()
	})
	zoom_out.addEventListener('click', function() {
		console.log("zoom out")
		zoomOut()
	})
});


let gamepadListener = window.setInterval(function(){
	// console.log("COL " + myGamepad.axes)
	if(myGamepad.axes != null){
		let dude_axes = [Math.round(myGamepad.axes[0]), Math.round(myGamepad.axes[1])]

		moveDude(dude_axes)
		
		zoomByStick(Math.round(myGamepad.axes[3]))
		
	}
}.bind(myGamepad), 100);

function zoomByStick(rightY){
	console.log(rightY)
	if(rightY == 1){
		zoomIn()
	}
	if(rightY == -1){
		zoomOut()
	}
	document.getElementById('dude').scrollIntoView({
		behavior: 'smooth',
		block: 'center',
		inline: 'center'
	});
}

function zoomIn(){
	updateZoom(0.025)
	
};

function zoomOut(){
	updateZoom(-0.025)
};

function moveDude(axes){
	let moved = false
	let dudeRow = dude.row
	let dudeCol = dude.col
	if( dude.listening && ( axes[0] != 0 || axes[1] != 0 ) ){
		console.log("dude is listening")
			
			if( !moved && axes[1] == 1 ){
				console.log("down")
				if(dudeRow < mapRows-1 ) dudeRow++	
				moved = true
			}
			
			if(  !moved && axes[0] == -1 ){
				console.log("left")
				if(dudeCol > 0) dudeCol--
				moved = true
			}
			
			if(  !moved && axes[0] == 1 ){
				console.log("right")
				if(dudeCol < mapCols-1) dudeCol++
				moved = true
			}
			if(  !moved && axes[1] == -1 ){
				console.log("up")
				if(dudeRow > 0) dudeRow--
				moved = true
			}
		
		document.getElementById('dude').scrollIntoView({
			behavior: 'smooth',
			block: 'center',
			inline: 'center'
		});
		
		dude.setPosition(dudeCol,dudeRow)
	}
}


// $(document).on('keypress', async function (e) {
	// let is_free = false
	// let dudeRow = dude.row
	// let dudeCol = dude.col
	// if(dude.listening){
		
		// switch(e.which){
			// case 40:
			// case 115:
				console.log("down")
				// if(dudeRow < mapRows-1 ) dudeRow++
				
				// break;
			// case 37:
			// case 97:
				console.log("left")
				// if(dudeCol > 0) dudeCol--
				// break;
			// case 39:
			// case 100:
				console.log("right")
				// if(dudeCol < mapCols-1) dudeCol++
				// break;
			// case 38:
			// case 119:
				console.log("up")
				// if(dudeRow > 0) dudeRow--	
				// break;
		// }
		// document.getElementById('dude').scrollIntoView({
            // behavior: 'smooth',
            // block: 'center',
            // inline: 'center'
        // });
		
		// dude.setPosition(dudeCol,dudeRow)
	// }
	
// });
